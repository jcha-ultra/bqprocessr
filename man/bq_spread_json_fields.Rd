% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bq_extract_json.R
\name{bq_spread_json_fields}
\alias{bq_spread_json_fields}
\title{Extracts the values of fields from a column of JSON strings, and puts them into columns named after the fields, into a destination table}
\usage{
bq_spread_json_fields(
  json_fields,
  project_name,
  dataset_name,
  table_name,
  json_column_name,
  destination_table_name = NULL
)
}
\arguments{
\item{json_fields}{A dataframe containing the fields of the JSON}

\item{project_name}{A string of the BQ project name.}

\item{dataset_name}{A string of the name of the dataset where table lives.}

\item{table_name}{A string of the name of the data table.}

\item{json_column_name}{A string of the name of the table column that contains the JSON values.}

\item{destination_table}{A table in BQ to send the results to.}
}
\value{
A \code{\link[bigrquery:bq_table]{bigrquery::bq_table()}} that has each field of the JSON values spread out as individual columns.
}
\description{
Extracts the values of fields from a column of JSON strings, and puts them into columns named after the fields, into a destination table
}
\examples{
bq_get_fieldnames(json_fieldnames, "ultra-project","TEST_DATASET_3","test_table", "test_destination_table")
}
\seealso{
\code{\link[bigrquery:bq_dataset_query]{bigrquery::bq_dataset_query()}}, which this function wraps around.
}
